{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\landingpage\\\\src\\\\pages\\\\Login\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { ModalOverlay, ModalBox, LeftPanel, RightPanel, Input, Button, Title, GoogleButton, OrSeparator } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  show,\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLoginSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      let result;\n      try {\n        result = await response.json();\n      } catch (err) {\n        const raw = await response.text();\n        console.error('ðŸ§¨ Non-JSON from /login:', raw);\n        alert('Login failed â€” server returned HTML instead of JSON.');\n        return;\n      }\n      if (response.ok) {\n        alert(`Welcome back!`);\n        onClose();\n        if (result.role === 'admin') {\n          navigate('/admin-dashboard');\n        } else {\n          navigate('/welcome');\n        }\n      } else {\n        alert(result.error || 'Login failed');\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error('Login error:', error.message);\n        alert('Login failed â€” ' + error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGoogleSignIn = async () => {\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      const response = await fetch('http://localhost:5000/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: user.email,\n          uid: user.uid\n        })\n      });\n      let data;\n      try {\n        data = await response.json();\n      } catch (err) {\n        const raw = await response.text();\n        console.error('ðŸ§¨ Non-JSON from /google-login:', raw);\n        alert('Google Login failed â€” server returned HTML instead of JSON.');\n        return;\n      }\n      if (response.ok) {\n        alert(`Welcome ${user.displayName || 'user'}! Signed in with Google.`);\n        onClose();\n        navigate('/welcome'); // Assuming Google login is for users only\n      } else {\n        alert(data.error || 'Google login failed');\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error('Google sign-in error:', error.message);\n        alert('Google Sign-In failed â€” ' + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    show: show,\n    children: /*#__PURE__*/_jsxDEV(ModalBox, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Login to Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLoginSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Logging Inâ€¦' : 'Log In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OrSeparator, {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleButton, {\n            type: \"button\",\n            onClick: handleGoogleSignIn,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\",\n              alt: \"Google\",\n              style: {\n                width: '20px',\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), \"Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            style: {\n              backgroundColor: '#999'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"AVUiQddzayg35dSAcnYjsIA9qh0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","getAuth","GoogleAuthProvider","signInWithPopup","ModalOverlay","ModalBox","LeftPanel","RightPanel","Input","Button","Title","GoogleButton","OrSeparator","jsxDEV","_jsxDEV","Login","show","onClose","_s","email","setEmail","password","setPassword","loading","setLoading","navigate","handleLoginSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","err","raw","text","console","error","alert","ok","role","Error","message","handleGoogleSignIn","auth","provider","user","uid","data","displayName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onClick","src","alt","style","width","height","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/landingpage/src/pages/Login/login.tsx"],"sourcesContent":["import React, { useState, FormEvent } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, UserCredential } from 'firebase/auth';\r\nimport {\r\n  ModalOverlay,\r\n  ModalBox,\r\n  LeftPanel,\r\n  RightPanel,\r\n  Input,\r\n  Button,\r\n  Title,\r\n  GoogleButton,\r\n  OrSeparator\r\n} from './styles';\r\n\r\ninterface LoginProps {\r\n  show: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ show, onClose }) => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      let result;\r\n      try {\r\n        result = await response.json();\r\n      } catch (err) {\r\n        const raw = await response.text();\r\n        console.error('ðŸ§¨ Non-JSON from /login:', raw);\r\n        alert('Login failed â€” server returned HTML instead of JSON.');\r\n        return;\r\n      }\r\n\r\n      if (response.ok) {\r\n        alert(`Welcome back!`);\r\n        onClose();\r\n        if (result.role === 'admin') {\r\n          navigate('/admin-dashboard');\r\n        } else {\r\n          navigate('/welcome');\r\n        }\r\n      } else {\r\n        alert(result.error || 'Login failed');\r\n      }\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        console.error('Login error:', error.message);\r\n        alert('Login failed â€” ' + error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    const auth = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n\r\n    try {\r\n      const result: UserCredential = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n\r\n      const response = await fetch('http://localhost:5000/google-login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: user.email, uid: user.uid })\r\n      });\r\n\r\n      let data;\r\n      try {\r\n        data = await response.json();\r\n      } catch (err) {\r\n        const raw = await response.text();\r\n        console.error('ðŸ§¨ Non-JSON from /google-login:', raw);\r\n        alert('Google Login failed â€” server returned HTML instead of JSON.');\r\n        return;\r\n      }\r\n\r\n      if (response.ok) {\r\n        alert(`Welcome ${user.displayName || 'user'}! Signed in with Google.`);\r\n        onClose();\r\n        navigate('/welcome'); // Assuming Google login is for users only\r\n      } else {\r\n        alert(data.error || 'Google login failed');\r\n      }\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        console.error('Google sign-in error:', error.message);\r\n        alert('Google Sign-In failed â€” ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalOverlay show={show}>\r\n      <ModalBox>\r\n        <LeftPanel>Welcome Back!</LeftPanel>\r\n        <RightPanel>\r\n          <Title>Login to Your Account</Title>\r\n          <form onSubmit={handleLoginSubmit}>\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <Button type=\"submit\" disabled={loading}>\r\n              {loading ? 'Logging Inâ€¦' : 'Log In'}\r\n            </Button>\r\n\r\n            <OrSeparator>or</OrSeparator>\r\n\r\n            <GoogleButton type=\"button\" onClick={handleGoogleSignIn}>\r\n              <img\r\n                src=\"https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg\"\r\n                alt=\"Google\"\r\n                style={{ width: '20px', height: '20px' }}\r\n              />\r\n              Sign in with Google\r\n            </GoogleButton>\r\n\r\n            <Button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              disabled={loading}\r\n              style={{ backgroundColor: '#999' }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </form>\r\n        </RightPanel>\r\n      </ModalBox>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}